package com.nirmalya.ppmtool.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.nirmalya.ppmtool.domain.Project;
import com.nirmalya.ppmtool.exception.ProjectIdException;
import com.nirmalya.ppmtool.exception.ProjectNotFoundException;
import com.nirmalya.ppmtool.repository.ProjectRepository;

@Service
public class ProjectService {
	
	
	private ProjectRepository projectRepository;

	public ProjectService(ProjectRepository projectRepository) {
		super();
		this.projectRepository = projectRepository;
	}
	
	public Project saveOrUpdateProject(Project project) {
		try {
			project.setProjectIdentifier(project.getProjectIdentifier().toUpperCase());
			
			BackLog backlog = new BackLog();
            project.setBacklog(backlog);
            backlog.setProject(project);
            backlog.setProjectIdentifier(project.getProjectIdentifier().toUpperCase());
            
			return projectRepository.save(project);
		}catch(Exception e) {
			throw new ProjectIdException("Project ID '"+project.getProjectIdentifier().toUpperCase()+"' already exists");
		}
		
	}
	
	public Project findProjectByIdentifier(String Id){
        Project project = projectRepository.findByProjectIdentifier(Id.toUpperCase());

        if(project == null){
            throw new ProjectNotFoundException("Project Id "+Id+" does not exist");
        }

        return project;
}

	 public Iterable<Project> findAllProjects(){
	        return projectRepository.findAll();
	    }
	 
	 public void deleteProjectByIdentifier(String projectId){
	        Project project = projectRepository.findByProjectIdentifier(projectId.toUpperCase());

	        if(project == null){
	            throw new ProjectNotFoundException("Cannot delete project: "+projectId+" as it doesn't exist");
	        }

	        projectRepository.delete(project);

	    }
 
}
