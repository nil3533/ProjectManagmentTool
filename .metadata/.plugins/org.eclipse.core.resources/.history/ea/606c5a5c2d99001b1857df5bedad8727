package com.nirmalya.ppmtool.controller;

import javax.validation.Valid;

import org.springframework.context.annotation.Bean;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.nirmalya.ppmtool.domain.User;
import com.nirmalya.ppmtool.exception.UserNameAlreadyExistsException;
import com.nirmalya.ppmtool.security.JWTProvider;
import com.nirmalya.ppmtool.service.UserService;
import com.nirmalya.ppmtool.service.ValidationErrorService;
import com.nirmalya.ppmtool.validator.UserValidator;

import lombok.AllArgsConstructor;

@RestController
@RequestMapping("/api/users")
@AllArgsConstructor
public class UserController {
	
	private UserService userService;
	private ValidationErrorService validationErrorService;
	private UserValidator userValidator;
	private JWTProvider tokenProvider;
	private AuthenticationManager authenticationManager;
	
	@PostMapping("/login")
	public ResponseEntity<?> authenticateUser(@Valid @RequestBody LoginRequest loginRequest, BindingResult result){
		
	}
	
	
	@PostMapping("/register")
    public ResponseEntity<?> registerUser(@Valid @RequestBody User user, BindingResult result){       
		userValidator.validate(user,result);		
		
		ResponseEntity<?> errorMap = validationErrorService.mapValidationErrorService(result);		
		if(errorMap!=null)
			return errorMap;		

        User newUser = userService.saveUser(user);
        return  new ResponseEntity<User>(newUser, HttpStatus.CREATED);		
		
    }

}
